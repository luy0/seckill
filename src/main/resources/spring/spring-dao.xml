<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
    <!--spring and mybatis integration-->
    <!--1. database properties: when loading several resources, ignore-unresolvable before the last second is true-->
    <context:property-placeholder location = "classpath:jdbc.properties" ignore-unresolvable="true"/>

    <!--2. c3p0 connecting pool-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!--driverClass, url, user, password-->
        <property name="driverClass" value="${db.driver}" />
        <property name="jdbcUrl" value="${db.url}" />
        <property name="user" value="${db.username}" />
        <property name="password" value="${db.password}" />

        <!--c3p0-->
        <!--maxPoolSize-->
        <property name="maxPoolSize" value="30"/>
        <!--minPoolSize-->
        <property name="minPoolSize" value="10"/>
        <!--after closing connecting pool, do cleaning but do not auto commit-->
        <property name="autoCommitOnClose" value="false"/>
        <!--default 0, keep waiting-->
        <property name="checkoutTimeout" value="1000"/>
        <!--re-connect times-->
        <property name="acquireRetryAttempts" value="2"/>
    </bean>
    <!--agreement prior than setting-->
    <!--SqlSessionFactory object-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--mybatis and spring critical setting-->
        <!--load to connecting pool-->
        <property name="dataSource" ref="dataSource"/>
        <!--mybatis global: mybatis-config.xml-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--scan entity package, use class name and use ';' for multi package-->
        <property name="typeAliasesPackage" value="org.seckill.entity"/>
        <!--scan sql: mapper's xml-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!--scan Dao interface package, dynamically implement dao interface, loading to spring container-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--loading to SqlSessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--provide Dao interface-->
        <property name="basePackage" value="org.seckill.dao"/>
    </bean>
</beans>